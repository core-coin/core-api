_id: req_0c2aef3637194479bbac0b0a2aa41930
type: Request
parentId: fld_fbd19ba7ffb349d680d3efb5b9ac4edb
modified: 1605470278284
created: 1605470278284
url: "{{ENVIRONMENT}}"
name: getStorageAt
description: "Returns the value from a storage position at a given address.\r

  \r

  **Parameters**\r

  \r

  `DATA`, 24 Bytes - address of the storage.\r

  \r

  `QUANTITY` - Integer of the position in the storage.\r

  \r

  `QUANTITY|TAG` - Integer block number, or the string `\"latest\"`,
  `\"earliest\"` or `\"pending\"`, see the default block parameter\r

  \r

  **Returns**\r

  \r

  `DATA` - the value at this storage position.\r

  \r

  **Example**\r

  \r

  Calculating the correct position depends on the storage to retrieve.
  Consider the following contract deployed
  at  0x295a70b2de5e3953354a6a8344e616ed314d7251 by address
  0x391694e7e0b0cce554cb130d723a9d27458f9298.\r

  \r

  ```\r

  contract Storage {\r

  \    uint pos0;\r

  \    mapping(address => uint) pos1;\r

  \    \r

  \    function Storage() {\r

  \        pos0 = 1234;\r

  \        pos1[msg.sender] = 5678;\r

  \    }\r

  }\r

  ```\r

  \r

  Retrieving the value of pos0 is straight forward:\r

  \r

  ```\r

  curl -X POST --data '{\"jsonrpc\":\"2.0\", \"method\": \"xcb_getStorageAt\",
  \"params\": [\"0x295a70b2de5e3953354a6a8344e616ed314d7251\", \"0x0\",
  \"latest\"], \"id\": 1}' {{ENVIRONMENT}}\r

  \r

  {\"jsonrpc\":\"2.0\",\"id\":1,\"result\":\"0x000000000000000000000000000000\
  00000000000000000000000000000004d2\"}\r

  ```\r

  \r

  Retrieving an element of the map is harder. The position of an element in
  the map is calculated with:\r

  \r

  ```\r

  sha3(LeftPad32(key, 0), LeftPad32(map position, 0))\r

  ```\r

  \r

  This means to retrieve the storage on
  `pos1[\"0x391694e7e0b0cce554cb130d723a9d27458f9298\"]` we need to calculate
  the position with:\r

  \r

  ```\r

  sha3(decodeHex(\"000000000000000000000000391694e7e0b0cce554cb130d723a9d2745\
  8f9298\" +
  \"0000000000000000000000000000000000000000000000000000000000000001\"))\r

  ```\r

  \r

  The gocore console which comes with the web3 library can be used to make the
  calculation:\r

  \r

  ```\r

  > var key =
  \"000000000000000000000000391694e7e0b0cce554cb130d723a9d27458f9298\" +
  \"0000000000000000000000000000000000000000000000000000000000000001\"\r

  undefined\r

  > web3.sha3(key, {\"encoding\": \"hex\"})\r

  \"0x6661e9d6d8b923d5bbaab1b96e1dd51ff6ea2a93520fdc9eb75d059238b8c5e9\"\r

  ```"
method: POST
body:
  mimeType: ""
  text: |-
    {
    	"jsonrpc":"2.0", 
    	"method": "xcb_getStorageAt", 
    	"params": [
    		"0x295a70b2de5e3953354a6a8344e616ed314d7251", 
    		"0x0",
    		"latest"
    	], 
    	"id": 1
    }
parameters: []
headers:
  - name: Content-Type
    value: application/json
authentication: {}
metaSortKey: -1605470278284
isPrivate: false
settingStoreCookies: true
settingSendCookies: true
settingDisableRenderRequestBody: false
settingEncodeUrl: true
settingRebuildPath: true
settingFollowRedirects: global
