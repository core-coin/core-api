_id: req_04084e3afd104210a46e4860fcc88285
type: Request
parentId: fld_5176b508b9d043869b2e3df427bd6d43
modified: 1615300480545
created: 1605470278074
url: "{{ _.URL }}"
name: newFilter
description: "Creates filter to notify, when client receives whisper message
  matching the filter options.\r

  \r

  **Parameters**\r

  \r

  `OBJECT` - The filter options:\r

  \r

  `to`: `DATA`, 60 Bytes - (optional) Identity of the receiver. When present
  it will try to decrypt any incoming message if the client holds the private
  key to this identity.\r

  \r

  `topics`: `Array of DATA` - Array of `DATA` topics which the incoming
  message's topics should match. You can use the following combinations:\r

  \r

  `[A, B] = A && B`\r

  \r

  `[A, [B, C]] = A && (B || C)`\r

  \r

  `[null, A, B] = ANYTHING && A && B` `null` works as a wildcard\r

  \r

  ```\r

  params: [{\r

  \   \"topics\": ['0x12341234bf4b564f'],\r

  \   \"to\":
  \"0x04f96a5e25610293e42a73908e93ccc8c4d4dc0edcfa9fa872f50cb214e08ebf61a03e245\
  533f97284d442460f2998cd41858798ddfd4d661997d3940272b717b1\"\r

  }]\r

  ```\r

  \r

  **Returns**\r

  \r

  `QUANTITY` - The newly created filter."
method: POST
body:
  mimeType: ""
  text: |-
    {
    	"jsonrpc":"2.0",
    	"method":"shh_newFilter",
    	"params":[{
    		"topics": [
    			"0x12341234bf4b564f"
    		],
    		"to": "{{EXAMPLE_ADDRESS_CB}}"
    	}],
    	"id":1
    }
parameters: []
headers:
  - name: Content-Type
    value: application/json
    id: pair_0b8e9f3f2d144000bc7c31d396fab144
authentication: {}
metaSortKey: -1605470278074
isPrivate: false
settingStoreCookies: true
settingSendCookies: true
settingDisableRenderRequestBody: false
settingEncodeUrl: true
settingRebuildPath: true
settingFollowRedirects: global
